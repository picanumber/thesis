{ 'benchmark_name' : 'Loading latency: RTree size = 243.2K', 'experiment_name' : 'linear', 'time_type' : 'seconds', 'factor_name' : 'max capacity (min capacity = max * 0.5)', 'factors' : [ 8, 16, 32, 48, 64, 96, 128, 160, 192, 224, 256 ], 'timings' : [ 0.199596, 0.17199, 0.16989, 0.177269, 0.191332, 0.232185, 0.216776, 0.252955, 0.260673, 0.315133, 0.331724 ] } 
{ 'benchmark_name' : 'Loading latency: RTree size = 243.2K', 'experiment_name' : 'quadratic', 'time_type' : 'seconds', 'factor_name' : 'max capacity (min capacity = max * 0.5)', 'factors' : [ 8, 16, 32, 48, 64, 96, 128, 160, 192, 224, 256 ], 'timings' : [ 0.283843, 0.312251, 0.378769, 0.45451, 0.522112, 0.644107, 0.767713, 0.900869, 1.02677, 1.16012, 1.30401 ] } 
{ 'benchmark_name' : 'Loading latency: RTree size = 243.2K', 'experiment_name' : 'rstar', 'time_type' : 'seconds', 'factor_name' : 'max capacity (min capacity = max * 0.5)', 'factors' : [ 8, 16, 32, 48, 64, 96, 128, 160, 192, 224, 256 ], 'timings' : [ 0.624018, 0.887343, 1.8925, 2.46324, 2.53848, 2.27858, 2.33768, 2.23081, 2.2259, 2.38846, 2.14676 ] } 
{ 'benchmark_name' : 'Loading latency: RTree size = 243.2K', 'experiment_name' : 'bulk', 'time_type' : 'seconds', 'factor_name' : 'max capacity (min capacity = max * 0.5)', 'factors' : [ 8, 16, 32, 48, 64, 96, 128, 160, 192, 224, 256 ], 'timings' : [ 0.0472467, 0.0493723, 0.0366539, 0.0363021, 0.0307844, 0.0283484, 0.027296, 0.0318245, 0.02509, 0.0247955, 0.0235 ] } 
