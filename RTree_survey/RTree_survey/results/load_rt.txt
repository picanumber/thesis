{ 'benchmark_name' : 'Loading latency: RTree size = 243.2K', 'experiment_name' : 'linear', 'time_type' : 'seconds', 'factor_name' : 'max capacity (min capacity = max * 0.5)', 'factors' : [ 8, 16, 32, 48, 64, 96, 128, 160, 192, 224, 256 ], 'timings' : [ 0.213732, 0.181436, 0.175459, 0.183345, 0.198934, 0.209667, 0.219051, 0.241885, 0.266532, 0.29326, 0.319057 ] } 
{ 'benchmark_name' : 'Loading latency: RTree size = 243.2K', 'experiment_name' : 'quadratic', 'time_type' : 'seconds', 'factor_name' : 'max capacity (min capacity = max * 0.5)', 'factors' : [ 8, 16, 32, 48, 64, 96, 128, 160, 192, 224, 256 ], 'timings' : [ 0.286062, 0.305764, 0.37679, 0.45344, 0.526209, 0.651086, 0.778632, 0.920511, 1.05936, 1.20305, 1.36968 ] } 
{ 'benchmark_name' : 'Loading latency: RTree size = 243.2K', 'experiment_name' : 'rstar', 'time_type' : 'seconds', 'factor_name' : 'max capacity (min capacity = max * 0.5)', 'factors' : [ 8, 16, 32, 48, 64, 96, 128, 160, 192, 224, 256 ], 'timings' : [ 0.638058, 0.949518, 1.86049, 2.49916, 2.43859, 2.25672, 2.2333, 2.20557, 2.25292, 2.41829, 2.16424 ] } 
{ 'benchmark_name' : 'Loading latency: RTree size = 243.2K', 'experiment_name' : 'bulk', 'time_type' : 'seconds', 'factor_name' : 'max capacity (min capacity = max * 0.5)', 'factors' : [ 8, 16, 32, 48, 64, 96, 128, 160, 192, 224, 256 ], 'timings' : [ 0.0491658, 0.0435663, 0.0382643, 0.0350682, 0.0328408, 0.0290871, 0.0292076, 0.0283134, 0.0264108, 0.0260795, 0.0242026 ] } 
