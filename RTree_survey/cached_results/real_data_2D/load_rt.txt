{ 'benchmark_name' : 'Loading latency: RTree size = 243.2K', 'experiment_name' : 'linear', 'time_type' : 'seconds', 'factor_name' : 'max capacity (min capacity = max * 0.5)', 'factors' : [ 8, 16, 32, 48, 64, 96, 128, 160, 192, 224, 256 ], 'timings' : [ 0.206858, 0.178997, 0.176074, 0.18486, 0.198823, 0.207489, 0.216877, 0.238108, 0.26404, 0.288544, 0.314876 ] } 
{ 'benchmark_name' : 'Loading latency: RTree size = 243.2K', 'experiment_name' : 'quadratic', 'time_type' : 'seconds', 'factor_name' : 'max capacity (min capacity = max * 0.5)', 'factors' : [ 8, 16, 32, 48, 64, 96, 128, 160, 192, 224, 256 ], 'timings' : [ 0.292478, 0.311063, 0.384635, 0.458255, 0.535263, 0.654683, 0.783497, 0.91161, 1.04662, 1.17316, 1.32118 ] } 
{ 'benchmark_name' : 'Loading latency: RTree size = 243.2K', 'experiment_name' : 'rstar', 'time_type' : 'seconds', 'factor_name' : 'max capacity (min capacity = max * 0.5)', 'factors' : [ 8, 16, 32, 48, 64, 96, 128, 160, 192, 224, 256 ], 'timings' : [ 0.637878, 0.905372, 1.8212, 2.36786, 2.35838, 2.20875, 2.19947, 2.19916, 2.24626, 2.41693, 2.16484 ] } 
{ 'benchmark_name' : 'Loading latency: RTree size = 243.2K', 'experiment_name' : 'bulk', 'time_type' : 'seconds', 'factor_name' : 'max capacity (min capacity = max * 0.5)', 'factors' : [ 8, 16, 32, 48, 64, 96, 128, 160, 192, 224, 256 ], 'timings' : [ 0.0485633, 0.0420994, 0.03656, 0.0340117, 0.0315064, 0.0295609, 0.027975, 0.0266633, 0.0265258, 0.0261228, 0.0244881 ] } 
